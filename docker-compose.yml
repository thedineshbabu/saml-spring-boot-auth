version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: saml-spring-postgres
    environment:
      POSTGRES_DB: saml_app_db
      POSTGRES_USER: opal_user
      POSTGRES_PASSWORD: opal_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U opal_user -d saml_app_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - saml-network

  # Spring Boot SAML Application
  saml-app:
    build: .
    container_name: saml-spring-app
    ports:
      - "8080:8080"
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/saml_app_db
      SPRING_DATASOURCE_USERNAME: opal_user
      SPRING_DATASOURCE_PASSWORD: opal_password
      
      # Application Configuration
      SPRING_PROFILES_ACTIVE: dev
      SERVER_PORT: 8080
      
      # Logging
      LOGGING_LEVEL_COM_EXAMPLE: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
      
      # JVM Options
      JAVA_OPTS: "-Xms512m -Xmx1024m -XX:+UseG1GC"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./credentials:/app/credentials
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - saml-network
    restart: unless-stopped

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: saml-spring-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - saml-network

volumes:
  postgres_data:
    driver: local
  # redis_data:
  #   driver: local

networks:
  saml-network:
    driver: bridge 